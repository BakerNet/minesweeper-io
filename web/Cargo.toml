[package]
name = "minesweeper-web"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
minesweeper-lib = { path="../minesweeper-lib" }
anyhow = "1.0"
async-trait = "0.1"
axum = { version = "0.7", features = ["ws", "macros"], optional = true }
axum-login = { version = "0.15", optional = true }
chrono = { version = "0.4", features = ["serde"] }
codee = { version = "0.2", features = ["json_serde_wasm"] }
console_error_panic_hook = "0.1"
console_log = "1.0"
cfg-if = "1.0"
dotenvy = "0.15"
futures = { version = "0.3", optional = true }
http = { version = "1.1" }
leptos = { version = "0.7.0-gamma", features = ["nightly"] }
leptos_axum = { version = "0.7.0-gamma", optional = true }
leptos_meta = { version = "0.7.0-gamma" }
leptos_router = { version = "0.7.0-gamma", features = ["nightly"] }
leptos-use = { version = "0.14.0-beta" }
log = "0.4"
nanoid = { version = "0.4", optional = true }
oauth2 = { version = "4.4", optional = true }
regex = "1.10"
reqwest = { version = "0.12", features = ["json"] }
serde = "1.0"
serde_json = "1.0"
server_fn = { version = "0.7.0-gamma" }
simple_logger = "5"
sqlx = { version = "0.7", features = ["sqlite", "time", "chrono", "runtime-tokio"], optional = true }
thiserror = "1.0"
time = "0.3"
tokio = { version = "1", features = ["full"], optional = true }
tower = { version = "0.4", features = ["util"], optional = true }
tower-http = { version = "0.5.2", features = ["fs"], optional = true }
tower-sessions = { version = "0.12", optional = true }
tower-sessions-sqlx-store = { version = "0.12.0", optional = true, features = ["sqlite"] }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter"], optional = true }
wasm-bindgen = "0.2"
web-sys = { version = "0.3", features = ["WebSocket", "Performance"] }
getrandom = { version = "0.2", features = ["js"] }

[features]
hydrate = ["leptos/hydrate", "leptos/nightly"]
ssr = [
    "dep:axum",
    "dep:axum-login",
    "dep:futures",
    "dep:leptos_axum",
    "dep:nanoid",
    "dep:oauth2",
    "dep:sqlx",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:tower-sessions",
    "dep:tower-sessions-sqlx-store",
    "dep:tracing",
    "dep:tracing-subscriber",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos-use/ssr",
]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "minesweeper-web"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/dummy.css"

# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "input.scss"

# The tailwind config file.
#
# Optional, defaults to "tailwind.config.js" which if is not present
# is generated for you
tailwind-config-file = "tailwind.config.js"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "web/end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
